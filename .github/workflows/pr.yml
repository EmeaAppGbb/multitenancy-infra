---
name: Plan Reconciliation
run-name: '[PR #${{github.event.pull_request.number}}] Plan Reconciliation [Branch: ${{ github.base_ref  }}]'

on:
  workflow_dispatch:
  pull_request:
    branches:
      - dev
      - prod

permissions:
  id-token: write
  contents: read

jobs:
  deploy-environments:
    name: Build reconciliation plan
    runs-on: ubuntu-latest
    env:
      TENANT_ID: 380adf45-465e-486c-92c1-a3a9e4f6c62d
      SUBSCRIPTION_ID: 3e1e6407-7334-4898-bb27-b68e97a6b32e # ME-MngEnvMCAP402121-playground
      # https://portal.azure.com/?feature.msaljs=true#view/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/~/Overview/appId/f2e9146b-f46e-4ddd-9367-4e4b9fa06fa9/isMSAApp~/false
      # AppReg that has Owner permissions on the subscription
      CLIENT_ID: f2e9146b-f46e-4ddd-9367-4e4b9fa06fa9
      ENVIRONMENT: ${{ github.event.pull_request.base.ref == 'prod' && 'PROD' || 'DEV' }}
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Deployment definition log
        run: |
          echo "ENVIRONMENT: ${{ env.ENVIRONMENT }}"
          echo "---"
          cat infra/main.${{ env.ENVIRONMENT }}.bicepparam
          
      - name: Azure login
        uses: azure/login@v2
        with:
          enable-AzPSSession: true
          # AppReg client secret: https://github.com/EmeaAppGbb/multitenancy-infra/settings/secrets/actions
          creds: >
            {
            "clientId":"${{ env.CLIENT_ID }}",
            "clientSecret":"${{ secrets.AZURE_SP_SECRET }}",
            "subscriptionId":"${{ env.SUBSCRIPTION_ID }}",
            "tenantId":"${{ env.TENANT_ID }}"
            }
         
      - name: Make deployment plan
        id: deploymentplan
        run: |
          # --parameters easyAuthSPSecret=${{ secrets.EASYAUTH_SP_SECRET }}
          az deployment sub create --location westeurope --template-file infra/main.bicep --parameters infra/main.${{ env.ENVIRONMENT }}.bicepparam --what-if >> plan.txt
          echo "$(cat plan.txt)"         

      - uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('plan.txt', 'utf8');
            const output = `#### Biceps Reconciliation Plan ðŸ“–\

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${plan}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })